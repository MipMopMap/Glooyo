{"ast":null,"code":"var _jsxFileName = \"/Users/dortagger/Desktop/Code/glooyot/src/components/Form/Form.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Form.css\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    db,\n    storage\n  } = _ref;\n  const [selectedFile1, setSelectedFile1] = useState(null);\n  const [selectedFile2, setSelectedFile2] = useState(null);\n  const [formData, setFormData] = useState({\n    title: \"\",\n    price: \"\",\n    paragraph: \"\",\n    tag: [\"\", \"\"]\n  });\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const handleFileChange1 = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      setSelectedFile1(event.target.files[0]);\n    }\n  };\n  const handleFileChange2 = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      setSelectedFile2(event.target.files[0]);\n    }\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n  };\n  const uploadImages = async () => {\n    if (!selectedFile1 || !selectedFile2 || !formData.title || !formData.price || !formData.paragraph) {\n      return;\n    }\n    setIsUploading(true);\n    try {\n      const storageRef1 = ref(storage, `images/${selectedFile1.name}`);\n      const storageRef2 = ref(storage, `images/${selectedFile2.name}`);\n      const uploadTask1 = uploadBytesResumable(storageRef1, selectedFile1);\n      const uploadTask2 = uploadBytesResumable(storageRef2, selectedFile2);\n      const uploadPromise1 = new Promise((resolve, reject) => {\n        uploadTask1.on(\"state_changed\", snapshot => {\n          const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n          setUploadProgress(progress);\n        }, error => {\n          console.error(\"Error uploading image 1:\", error);\n          reject(error);\n        }, async () => {\n          resolve(await getDownloadURL(storageRef1));\n        });\n      });\n      const uploadPromise2 = new Promise((resolve, reject) => {\n        uploadTask2.on(\"state_changed\", snapshot => {\n          const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n          setUploadProgress(progress);\n        }, error => {\n          console.error(\"Error uploading image 2:\", reject(error));\n        }, async () => {\n          resolve(await getDownloadURL(storageRef2));\n        });\n      });\n      const [downloadURL1, downloadURL2] = await Promise.all([uploadPromise1, uploadPromise2]);\n      await addDoc(collection(db, \"glooyaData\"), {\n        imageURL1: downloadURL1,\n        imageURL2: downloadURL2,\n        ...formData\n      });\n      console.log(\"Images uploaded and data stored successfully!\");\n      setIsUploading(false);\n      setSelectedFile1(null);\n      setSelectedFile2(null);\n      setFormData({\n        title: \"\",\n        price: \"\",\n        paragraph: \"\"\n      });\n      setUploadProgress(0);\n    } catch (error) {\n      console.error(\"Error uploading images and data:\", error);\n      setIsUploading(false);\n      setUploadProgress(0);\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    uploadImages();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-wrapper\",\n    children: !isUploading ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: formData.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"price\",\n        placeholder: \"Price\",\n        value: formData.price,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"paragraph\",\n        placeholder: \"Paragraph\",\n        value: formData.paragraph,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploading\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Uploading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: uploadProgress,\n        max: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"wBTdQTLJRBW1kWNTUYY6Egnj5JY=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","getDownloadURL","ref","uploadBytesResumable","addDoc","collection","jsxDEV","_jsxDEV","Form","_ref","_s","db","storage","selectedFile1","setSelectedFile1","selectedFile2","setSelectedFile2","formData","setFormData","title","price","paragraph","tag","isUploading","setIsUploading","uploadProgress","setUploadProgress","handleFileChange1","event","target","files","length","handleFileChange2","handleChange","name","value","prevFormData","uploadImages","storageRef1","storageRef2","uploadTask1","uploadTask2","uploadPromise1","Promise","resolve","reject","on","snapshot","progress","bytesTransferred","totalBytes","error","console","uploadPromise2","downloadURL1","downloadURL2","all","imageURL1","imageURL2","log","handleSubmit","preventDefault","className","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","max","_c","$RefreshReg$"],"sources":["/Users/dortagger/Desktop/Code/glooyot/src/components/Form/Form.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\nimport \"./Form.css\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { addDoc, collection } from \"firebase/firestore\";\n\ntype FormProps = { db: any; storage: any };\n\nconst Form: FC<FormProps> = ({ db, storage }) => {\n  const [selectedFile1, setSelectedFile1] = useState<File | null>(null);\n  const [selectedFile2, setSelectedFile2] = useState<File | null>(null);\n  const [formData, setFormData] = useState({\n    title: \"\",\n    price: \"\",\n    paragraph: \"\",\n    tag: [\"\", \"\"],\n  });\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const handleFileChange1 = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files.length > 0) {\n      setSelectedFile1(event.target.files[0]);\n    }\n  };\n\n  const handleFileChange2 = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files.length > 0) {\n      setSelectedFile2(event.target.files[0]);\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n  };\n\n  const uploadImages = async () => {\n    if (\n      !selectedFile1 ||\n      !selectedFile2 ||\n      !formData.title ||\n      !formData.price ||\n      !formData.paragraph\n    ) {\n      return;\n    }\n\n    setIsUploading(true);\n\n    try {\n      const storageRef1 = ref(storage, `images/${selectedFile1.name}`);\n      const storageRef2 = ref(storage, `images/${selectedFile2.name}`);\n\n      const uploadTask1 = uploadBytesResumable(storageRef1, selectedFile1);\n      const uploadTask2 = uploadBytesResumable(storageRef2, selectedFile2);\n\n      const uploadPromise1 = new Promise((resolve, reject) => {\n        uploadTask1.on(\n          \"state_changed\",\n          (snapshot: { bytesTransferred: number; totalBytes: number }) => {\n            const progress =\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            setUploadProgress(progress);\n          },\n          (error: any) => {\n            console.error(\"Error uploading image 1:\", error);\n            reject(error);\n          },\n          async () => {\n            resolve(await getDownloadURL(storageRef1));\n          }\n        );\n      });\n\n      const uploadPromise2 = new Promise((resolve, reject) => {\n        uploadTask2.on(\n          \"state_changed\",\n          (snapshot: { bytesTransferred: number; totalBytes: number }) => {\n            const progress =\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            setUploadProgress(progress);\n          },\n          (error: any) => {\n            console.error(\"Error uploading image 2:\", reject(error));\n          },\n          async () => {\n            resolve(await getDownloadURL(storageRef2));\n          }\n        );\n      });\n\n      const [downloadURL1, downloadURL2] = await Promise.all([\n        uploadPromise1,\n        uploadPromise2,\n      ]);\n\n      await addDoc(collection(db, \"glooyaData\"), {\n        imageURL1: downloadURL1,\n        imageURL2: downloadURL2,\n        ...formData,\n      });\n\n      console.log(\"Images uploaded and data stored successfully!\");\n      setIsUploading(false);\n      setSelectedFile1(null);\n      setSelectedFile2(null);\n      setFormData({ title: \"\", price: \"\", paragraph: \"\" });\n      setUploadProgress(0);\n    } catch (error) {\n      console.error(\"Error uploading images and data:\", error);\n      setIsUploading(false);\n      setUploadProgress(0);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    uploadImages();\n  };\n  return (\n    <div className=\"form-wrapper\">\n      {!isUploading ? (\n        <form onSubmit={handleSubmit}>\n          <input type=\"file\" onChange={handleFileChange1} />\n          <input type=\"file\" onChange={handleFileChange2} />\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            value={formData.title}\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"price\"\n            placeholder=\"Price\"\n            value={formData.price}\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"paragraph\"\n            placeholder=\"Paragraph\"\n            value={formData.paragraph}\n            onChange={handleChange}\n          />\n          <button type=\"submit\">Upload</button>\n        </form>\n      ) : (\n        <div className=\"uploading\">\n          <p>Uploading...</p>\n          <progress value={uploadProgress} max={100} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Form;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,YAAY;AACnB,SAASC,cAAc,EAAEC,GAAG,EAAEC,oBAAoB,QAAQ,kBAAkB;AAC5E,SAASC,MAAM,EAAEC,UAAU,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxD,MAAMC,IAAmB,GAAGC,IAAA,IAAqB;EAAAC,EAAA;EAAA,IAApB;IAAEC,EAAE;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EAC1C,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAc,IAAI,CAAC;EACrE,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAc,IAAI,CAAC;EACrE,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC;IACvCmB,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,EAAE;IACbC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM2B,iBAAiB,GAAIC,KAA0C,IAAK;IACxE,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACvDjB,gBAAgB,CAACc,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACzC;EACF,CAAC;EAED,MAAME,iBAAiB,GAAIJ,KAA0C,IAAK;IACxE,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACvDf,gBAAgB,CAACY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACzC;EACF,CAAC;EAED,MAAMG,YAAY,GAAIL,KAA0C,IAAK;IACnE,MAAM;MAAEM,IAAI;MAAEC;IAAM,CAAC,GAAGP,KAAK,CAACC,MAAM;IACpCX,WAAW,CAAEkB,YAAY,KAAM;MAC7B,GAAGA,YAAY;MACf,CAACF,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IACE,CAACxB,aAAa,IACd,CAACE,aAAa,IACd,CAACE,QAAQ,CAACE,KAAK,IACf,CAACF,QAAQ,CAACG,KAAK,IACf,CAACH,QAAQ,CAACI,SAAS,EACnB;MACA;IACF;IAEAG,cAAc,CAAC,IAAI,CAAC;IAEpB,IAAI;MACF,MAAMc,WAAW,GAAGpC,GAAG,CAACU,OAAO,EAAG,UAASC,aAAa,CAACqB,IAAK,EAAC,CAAC;MAChE,MAAMK,WAAW,GAAGrC,GAAG,CAACU,OAAO,EAAG,UAASG,aAAa,CAACmB,IAAK,EAAC,CAAC;MAEhE,MAAMM,WAAW,GAAGrC,oBAAoB,CAACmC,WAAW,EAAEzB,aAAa,CAAC;MACpE,MAAM4B,WAAW,GAAGtC,oBAAoB,CAACoC,WAAW,EAAExB,aAAa,CAAC;MAEpE,MAAM2B,cAAc,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtDL,WAAW,CAACM,EAAE,CACZ,eAAe,EACdC,QAA0D,IAAK;UAC9D,MAAMC,QAAQ,GACXD,QAAQ,CAACE,gBAAgB,GAAGF,QAAQ,CAACG,UAAU,GAAI,GAAG;UACzDxB,iBAAiB,CAACsB,QAAQ,CAAC;QAC7B,CAAC,EACAG,KAAU,IAAK;UACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;UAChDN,MAAM,CAACM,KAAK,CAAC;QACf,CAAC,EACD,YAAY;UACVP,OAAO,CAAC,MAAM3C,cAAc,CAACqC,WAAW,CAAC,CAAC;QAC5C,CACF,CAAC;MACH,CAAC,CAAC;MAEF,MAAMe,cAAc,GAAG,IAAIV,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtDJ,WAAW,CAACK,EAAE,CACZ,eAAe,EACdC,QAA0D,IAAK;UAC9D,MAAMC,QAAQ,GACXD,QAAQ,CAACE,gBAAgB,GAAGF,QAAQ,CAACG,UAAU,GAAI,GAAG;UACzDxB,iBAAiB,CAACsB,QAAQ,CAAC;QAC7B,CAAC,EACAG,KAAU,IAAK;UACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEN,MAAM,CAACM,KAAK,CAAC,CAAC;QAC1D,CAAC,EACD,YAAY;UACVP,OAAO,CAAC,MAAM3C,cAAc,CAACsC,WAAW,CAAC,CAAC;QAC5C,CACF,CAAC;MACH,CAAC,CAAC;MAEF,MAAM,CAACe,YAAY,EAAEC,YAAY,CAAC,GAAG,MAAMZ,OAAO,CAACa,GAAG,CAAC,CACrDd,cAAc,EACdW,cAAc,CACf,CAAC;MAEF,MAAMjD,MAAM,CAACC,UAAU,CAACM,EAAE,EAAE,YAAY,CAAC,EAAE;QACzC8C,SAAS,EAAEH,YAAY;QACvBI,SAAS,EAAEH,YAAY;QACvB,GAAGtC;MACL,CAAC,CAAC;MAEFmC,OAAO,CAACO,GAAG,CAAC,+CAA+C,CAAC;MAC5DnC,cAAc,CAAC,KAAK,CAAC;MACrBV,gBAAgB,CAAC,IAAI,CAAC;MACtBE,gBAAgB,CAAC,IAAI,CAAC;MACtBE,WAAW,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAC,CAAC;MACpDK,iBAAiB,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOyB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD3B,cAAc,CAAC,KAAK,CAAC;MACrBE,iBAAiB,CAAC,CAAC,CAAC;IACtB;EACF,CAAC;EAED,MAAMkC,YAAY,GAAIhC,KAAuC,IAAK;IAChEA,KAAK,CAACiC,cAAc,CAAC,CAAC;IACtBxB,YAAY,CAAC,CAAC;EAChB,CAAC;EACD,oBACE9B,OAAA;IAAKuD,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1B,CAACxC,WAAW,gBACXhB,OAAA;MAAMyD,QAAQ,EAAEJ,YAAa;MAAAG,QAAA,gBAC3BxD,OAAA;QAAO0D,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEvC;MAAkB;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClD/D,OAAA;QAAO0D,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAElC;MAAkB;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClD/D,OAAA;QACE0D,IAAI,EAAC,MAAM;QACX/B,IAAI,EAAC,OAAO;QACZqC,WAAW,EAAC,OAAO;QACnBpC,KAAK,EAAElB,QAAQ,CAACE,KAAM;QACtB+C,QAAQ,EAAEjC;MAAa;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF/D,OAAA;QACE0D,IAAI,EAAC,MAAM;QACX/B,IAAI,EAAC,OAAO;QACZqC,WAAW,EAAC,OAAO;QACnBpC,KAAK,EAAElB,QAAQ,CAACG,KAAM;QACtB8C,QAAQ,EAAEjC;MAAa;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF/D,OAAA;QACE0D,IAAI,EAAC,MAAM;QACX/B,IAAI,EAAC,WAAW;QAChBqC,WAAW,EAAC,WAAW;QACvBpC,KAAK,EAAElB,QAAQ,CAACI,SAAU;QAC1B6C,QAAQ,EAAEjC;MAAa;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF/D,OAAA;QAAQ0D,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,gBAEP/D,OAAA;MAAKuD,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBxD,OAAA;QAAAwD,QAAA,EAAG;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnB/D,OAAA;QAAU4B,KAAK,EAAEV,cAAe;QAAC+C,GAAG,EAAE;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5D,EAAA,CAvJIF,IAAmB;AAAAiE,EAAA,GAAnBjE,IAAmB;AAyJzB,eAAeA,IAAI;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}