{"ast":null,"code":"var _jsxFileName = \"/Users/dortagger/Desktop/Code/glooyot/src/components/Form/Form.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Form.css\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    db,\n    storage,\n    setData,\n    handleFormToggle\n  } = _ref;\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [formData, setFormData] = useState({\n    title: \"\",\n    price: \"\",\n    paragraph: \"\",\n    tags: []\n  });\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: name === \"tags\" ? value.split(\",\") : value\n    }));\n  };\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      setSelectedFile(event.target.files[0]);\n    }\n  };\n  const uploadImages = async () => {\n    if (!selectedFile || Object.values(formData).some(value => value === \"\")) {\n      return;\n    }\n    setIsUploading(true);\n    try {\n      const storageRef = ref(storage, `images/${selectedFile.name}`);\n      const uploadTask = uploadBytesResumable(storageRef, selectedFile);\n      const uploadPromise = new Promise((resolve, reject) => {\n        uploadTask.on(\"state_changed\", snapshot => {\n          const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n          setUploadProgress(progress);\n        }, error => {\n          console.error(\"Error uploading image:\", error);\n          reject(error);\n        }, async () => {\n          const downloadURL = await getDownloadURL(storageRef);\n          resolve(downloadURL);\n        });\n      });\n      const downloadURL = await uploadPromise;\n      const newData = {\n        imageURL: downloadURL,\n        ...formData,\n        uploadedAt: serverTimestamp()\n      };\n      await addDoc(collection(db, \"glooyaData\"), newData);\n      setData(prevData => [...prevData, newData]);\n      console.log(\"Image uploaded and data stored successfully!\");\n      handleFormToggle();\n      setIsUploading(false);\n      setSelectedFile(null);\n      setFormData({\n        title: \"\",\n        price: \"\",\n        paragraph: \"\",\n        tags: []\n      });\n      setUploadProgress(0);\n    } catch (error) {\n      console.error(\"Error uploading image and data:\", error);\n      setIsUploading(false);\n      setUploadProgress(0);\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    uploadImages();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-wrapper\",\n    children: !isUploading ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-left form-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            placeholder: \"Title\",\n            value: formData.title,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"price\",\n            placeholder: \"Price\",\n            value: formData.price,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"paragraph\",\n            placeholder: \"Paragraph\",\n            value: formData.paragraph,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-right form-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"tags\",\n            placeholder: \"Tags (comma-separated)\",\n            value: formData.tags.join(\",\"),\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-form\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFormToggle,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploading\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Uploading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: uploadProgress,\n        max: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"xCQsgdBgqfVCqj4jWJM3S6r+NHs=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","getDownloadURL","ref","uploadBytesResumable","addDoc","collection","serverTimestamp","jsxDEV","_jsxDEV","Form","_ref","_s","db","storage","setData","handleFormToggle","selectedFile","setSelectedFile","formData","setFormData","title","price","paragraph","tags","isUploading","setIsUploading","uploadProgress","setUploadProgress","handleChange","event","name","value","target","prevFormData","split","handleFileChange","files","length","uploadImages","Object","values","some","storageRef","uploadTask","uploadPromise","Promise","resolve","reject","on","snapshot","progress","bytesTransferred","totalBytes","error","console","downloadURL","newData","imageURL","uploadedAt","prevData","log","handleSubmit","preventDefault","className","children","onSubmit","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","join","onClick","max","_c","$RefreshReg$"],"sources":["/Users/dortagger/Desktop/Code/glooyot/src/components/Form/Form.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\nimport \"./Form.css\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\n\ntype FormProps = {\n  db: any;\n  storage: any;\n  setData: any;\n  handleFormToggle: () => void;\n};\n\nconst Form: FC<FormProps> = ({ db, storage, setData, handleFormToggle }) => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [formData, setFormData] = useState({\n    title: \"\",\n    price: \"\",\n    paragraph: \"\",\n    tags: [] as string[],\n  });\n\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: name === \"tags\" ? value.split(\",\") : value,\n    }));\n  };\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files.length > 0) {\n      setSelectedFile(event.target.files[0]);\n    }\n  };\n\n  const uploadImages = async () => {\n    if (\n      !selectedFile ||\n      Object.values(formData).some((value) => value === \"\")\n    ) {\n      return;\n    }\n\n    setIsUploading(true);\n\n    try {\n      const storageRef = ref(storage, `images/${selectedFile.name}`);\n      const uploadTask = uploadBytesResumable(storageRef, selectedFile);\n\n      const uploadPromise = new Promise<string>((resolve, reject) => {\n        uploadTask.on(\n          \"state_changed\",\n          (snapshot) => {\n            const progress =\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            setUploadProgress(progress);\n          },\n          (error) => {\n            console.error(\"Error uploading image:\", error);\n            reject(error);\n          },\n          async () => {\n            const downloadURL = await getDownloadURL(storageRef);\n            resolve(downloadURL);\n          }\n        );\n      });\n\n      const downloadURL = await uploadPromise;\n\n      const newData = {\n        imageURL: downloadURL,\n        ...formData,\n        uploadedAt: serverTimestamp(),\n      };\n\n      await addDoc(collection(db, \"glooyaData\"), newData);\n\n      setData((prevData: any) => [...prevData, newData]);\n\n      console.log(\"Image uploaded and data stored successfully!\");\n      handleFormToggle();\n      setIsUploading(false);\n      setSelectedFile(null);\n      setFormData({ title: \"\", price: \"\", paragraph: \"\", tags: [] });\n      setUploadProgress(0);\n    } catch (error) {\n      console.error(\"Error uploading image and data:\", error);\n      setIsUploading(false);\n      setUploadProgress(0);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    uploadImages();\n  };\n\n  return (\n    <div className=\"form-wrapper\">\n      {!isUploading ? (\n        <form onSubmit={handleSubmit}>\n          <div className=\"form\">\n            <div className=\"form-left form-column\">\n              <input\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Title\"\n                value={formData.title}\n                onChange={handleChange}\n              />\n              <input\n                type=\"text\"\n                name=\"price\"\n                placeholder=\"Price\"\n                value={formData.price}\n                onChange={handleChange}\n              />\n              <input\n                type=\"text\"\n                name=\"paragraph\"\n                placeholder=\"Paragraph\"\n                value={formData.paragraph}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-right form-column\">\n              <input\n                type=\"text\"\n                name=\"tags\"\n                placeholder=\"Tags (comma-separated)\"\n                value={formData.tags.join(\",\")}\n                onChange={handleChange}\n              />\n              <input type=\"file\" onChange={handleFileChange} />\n            </div>\n          </div>\n          <button type=\"submit\" className=\"submit-form\">\n            Upload\n          </button>\n          <button onClick={handleFormToggle}>Close</button>\n        </form>\n      ) : (\n        <div className=\"uploading\">\n          <p>Uploading...</p>\n          <progress value={uploadProgress} max={100} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}